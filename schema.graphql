enum DrawState {
  Open
  Committed
  Rewarded
}

type Draw @entity {
  id: ID!
  drawId: String!
  # drawsCount: BigInt!
  feeBeneficiary: Bytes
  secretHash: Bytes
  feeFraction: BigInt
  winner: Bytes
  entropy: Bytes
  winnings: BigInt
  fee: BigInt
  state: DrawState
  poolContract: PoolContract!

  openedAt: BigInt
  committedAt: BigInt
  rewardedAt: BigInt

  balance: BigInt

  winnerEntry: PlayerEntry

  entryIds: [String!]!
  entries: [PlayerEntry!]!
  entriesCount: BigInt!
}

type Player @entity {
  id: ID! 
  balance: BigInt!
  sponsorshipBalance: BigInt!

  entries: [PlayerEntry!] @derivedFrom(field: "player")
}

type Admin @entity {
  id: ID!
  addedAt: BigInt!
}

type PlayerEntry @entity {
  id: ID!
  drawId: String!
  draw: Draw!
  player: Player
  balance: BigInt!
  sponsorshipBalance: BigInt
}

type PoolContract @entity {
  id: ID!
  draws: [Draw!]! @derivedFrom(field: "poolContract")
  drawsCount: BigInt!
}